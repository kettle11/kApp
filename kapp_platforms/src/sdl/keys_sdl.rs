use fermium::scancode::*;

use kapp_platform_common::Key;
pub fn scancode_to_key(key_in: SDL_Scancode) -> Key {
    match key_in {
        SDL_SCANCODE_A => Key::A,
        SDL_SCANCODE_B => Key::B,
        SDL_SCANCODE_C => Key::C,
        SDL_SCANCODE_D => Key::D,
        SDL_SCANCODE_E => Key::E,
        SDL_SCANCODE_F => Key::F,
        SDL_SCANCODE_G => Key::G,
        SDL_SCANCODE_H => Key::H,
        SDL_SCANCODE_I => Key::I,
        SDL_SCANCODE_J => Key::J,
        SDL_SCANCODE_K => Key::K,
        SDL_SCANCODE_L => Key::L,
        SDL_SCANCODE_M => Key::M,
        SDL_SCANCODE_N => Key::N,
        SDL_SCANCODE_O => Key::O,
        SDL_SCANCODE_P => Key::P,
        SDL_SCANCODE_Q => Key::Q,
        SDL_SCANCODE_R => Key::R,
        SDL_SCANCODE_S => Key::S,
        SDL_SCANCODE_T => Key::T,
        SDL_SCANCODE_U => Key::U,
        SDL_SCANCODE_V => Key::V,
        SDL_SCANCODE_W => Key::W,
        SDL_SCANCODE_X => Key::X,
        SDL_SCANCODE_Y => Key::Y,
        SDL_SCANCODE_Z => Key::Z,
        SDL_SCANCODE_1 => Key::Digit1,
        SDL_SCANCODE_2 => Key::Digit2,
        SDL_SCANCODE_3 => Key::Digit3,
        SDL_SCANCODE_4 => Key::Digit4,
        SDL_SCANCODE_5 => Key::Digit5,
        SDL_SCANCODE_6 => Key::Digit6,
        SDL_SCANCODE_7 => Key::Digit7,
        SDL_SCANCODE_8 => Key::Digit8,
        SDL_SCANCODE_9 => Key::Digit9,
        SDL_SCANCODE_0 => Key::Digit0,
        SDL_SCANCODE_RETURN => Key::Return,
        _ => Key::Unknown,
    }
}
